###############################################
# 다이어그램 관련 API 테스트
###############################################

@baseUrl = http://localhost:8000
@projectId = project-123
@apiId = api-456
@version = 1
@componentId = component-789
@sseId = sse-123

### 특정 버전의 다이어그램 조회 테스트
GET {{baseUrl}}/api/v1/projects/{{projectId}}/apis/{{apiId}}/versions/{{version}}
Content-Type: application/json

### 특정 컴포넌트의 위치 업데이트 테스트
PUT {{baseUrl}}/api/v1/projects/{{projectId}}/apis/{{apiId}}/components/{{componentId}}/position
Content-Type: application/json

{
  "x": 250.5,
  "y": 180.75
}

### 프롬프트 채팅 요청 테스트
POST {{baseUrl}}/api/v1/projects/{{projectId}}/apis/{{apiId}}/chats
Content-Type: application/json

{
  "tag": "IMPLEMENT",
  "promptType": "BODY",
  "message": "게시글 생성 기능을 구현해주세요",
  "targetMethods": [
    {
      "methodId": "method-123"
    }
  ]
}

### SSE 연결 테스트 (브라우저에서 테스트하는 것이 좋음)
GET {{baseUrl}}/api/sse/connect/e2fbee0a-77f1-424f-8f40-cfad0d95e93c


### 여러 데이터 샘플 만들기 - 새 다이어그램 생성
POST {{baseUrl}}/api/v1/projects/sample-project/apis/sample-api/chats
Content-Type: application/json

{
  "tag": "IMPLEMENT",
  "promptType": "BODY",
  "message": "사용자 등록 기능이 필요합니다. User 클래스와 UserService를 생성해주세요.",
  "targetMethods": []
}

### 다이어그램 컴포넌트 위치 업데이트 샘플
PUT {{baseUrl}}/api/v1/projects/sample-project/apis/sample-api/components/component-user-service/position
Content-Type: application/json

{
  "x": 350.0,
  "y": 200.0
}

### 두 번째 채팅으로 다이어그램 버전 증가 테스트
POST {{baseUrl}}/api/v1/projects/sample-project/apis/sample-api/chats
Content-Type: application/json

{
  "tag": "REFACTORING",
  "promptType": "BODY",
  "message": "UserService에 로그인 기능을 추가해주세요.",
  "targetMethods": [
    {
      "methodId": "method-user-service-register"
    }
  ]
}

### 이전 버전의 다이어그램 조회
GET {{baseUrl}}/api/v1/projects/sample-project/apis/sample-api/versions/1
Content-Type: application/json

### 최신 버전의 다이어그램 조회
GET {{baseUrl}}/api/v1/projects/sample-project/apis/sample-api/versions/2
Content-Type: application/json