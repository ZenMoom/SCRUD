### 서버 상태 확인
GET http://localhost:8000/status

### 다이어그램 생성 요청 전송
POST http://localhost:8000/diagrams/request
Content-Type: application/json

{
 "tag": "IMPLEMENT",
 "promptType": "BODY",
 "message": "사용자 인증 로직을 구현해주세요. 이메일과 비밀번호를 검증하고 JWT 토큰을 발급해야 합니다.",
 "targetMethods": [
   {
     "methodId": "auth-001",
     "componentId": "comp-001"
   },
   {
     "methodId": "token-002",
     "componentId": "comp-003"
   }
 ]
}

### 테스트 응답 직접 전송 (개발 테스트용)
POST http://localhost:8000/test/diagram-response
Content-Type: application/json

{
  "systemChatId": "chat-12345",
  "status": "MODIFIED",
  "systemChatMessage": "메서드 구현이 완료되었습니다. 클래스 구조를 개선하고 중복 코드를 제거했습니다.",
  "versionInfo": {
    "newVersionId": "v1.2.3",
    "description": "인증 시스템 리팩토링 및 기능 개선"
  },
  "diagramId": "diagram-001"
}

### 채팅 시작 요청
POST http://localhost:8000/api/v1/chat/start
Content-Type: application/json

{
  "message": "안녕하세요! 저는 오늘 날씨가 어떤지 궁금합니다."
}

### 채팅 스트림 데이터 가져오기
GET http://localhost:8000/api/v1/chat/stream/4a287028-6bb4-4ebc-8c04-bfdc09c4cbd6
# stream_id는 start_chat 응답에서 받은 값으로 교체해야 합니다

### 채팅 메시지 전송 (스트림 계속)
POST http://localhost:8000/chat/message/{stream_id}
Content-Type: application/json

{
  "message": "그리고 주말 계획은 어떻게 세우는 것이 좋을까요?"
}