openapi: 3.0.0

info:
  title: Example API
  description: 예시 API
  version: 1.0.0
  contact:
    name: 예시 문서입니다.

servers:
  - url: http://localhost:8080
    description: 개발용 로컬 서버
  - url: http://localhost:8081
    description: 개발용 목 서버

tags:
  - name: Example
    description: 예시 관련 API
  - name: Project
    description: 프로젝트 전역세팅 관련 API - 개발 전

paths:
  /api/v1/examples/{exampleId}:
    get:
      tags:
        - Example
      operationId: getExampleById
      summary: '특정 ID의 예시를 조회합니다.'
      description: '주어진 ID에 해당하는 예시를 조회합니다. 상세 예시 입니다.'
      parameters:
        - $ref: './components/schemas/example-schema.yaml#/ExampleId'
      responses:
        '200':
          $ref: './components/responses/example-response.yaml#/ExampleResponse'
        '404':
          $ref: './components/responses/exception-response.yaml#/NotFoundException'
    post:
      tags:
        - Example
      operationId: updateExampleById
      summary: 특정 ID의 예시를 업데이트합니다.
      description: 주어진 ID에 해당하는 예시를 업데이트합니다. 상세 예시 입니다.
      parameters:
        - $ref: './components/schemas/example-schema.yaml#/ExampleId'
      requestBody:
        $ref: './components/requests/example-request.yaml#/ExampleRequest'
      responses:
        '200':
          $ref: './components/responses/example-response.yaml#/ExampleResponse'
        '404':
          $ref: './components/responses/exception-response.yaml#/NotFoundException'

  /api/v1/examples:
    get:
      tags:
        - Example
      operationId: getExamplesWithPagination
      x-spring-paginated: true
      summary: '예시 목록을 페이지네이션하여 조회합니다.'
      description: '예시 목록을 페이지 번호와 페이지 크기를 이용하여 페이지네이션하여 조회합니다.'
      parameters:
        - $ref: './components/schemas/page-schema.yaml#/Page'
        - $ref: './components/schemas/page-schema.yaml#/Size'

      responses:
        '200':
          $ref: './components/responses/example-response.yaml#/ExamplePageResponse'
        '404':
          $ref: './components/responses/exception-response.yaml#/NotFoundException'

    post:
      tags:
        - Example
      operationId: createExampleOne
      summary: 예시를 하나 생성합니다.
      description: 예시를 하나 생성합니다. 상세 예시 입니다.
      requestBody:
        $ref: './components/requests/example-request.yaml#/ExampleRequest'
      responses:
        '200':
          $ref: './components/responses/example-response.yaml#/ExampleResponse'
        '404':
          $ref: './components/responses/exception-response.yaml#/NotFoundException'


  ########################################
  # 1. 룰 조회
  ########################################
  /api/v1/rules:
    get:
      tags:
        - Rule
      summary: 사용 가능한 룰 목록 조회
      description: 입력값의 타입, 필수 여부, 제약 조건 등을 설정하는 룰 정보를 조회합니다.
      operationId: getRules
      responses:
        '200':
          $ref: './components/responses/rule-response.yaml#/RuleResponse'

  ########################################
  # 2. API 조회 (단일 조회)
  ########################################
  /api/v1/specs/{apiSpecVersionId}:
    get:
      tags:
        - ApiSpec
      summary: API 스펙 상세 조회
      description: 단일 API 스펙과 관련 필드를 조회합니다.
      operationId: getApiSpecById
      parameters:
        - name: apiSpecVersionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: './components/responses/api-spec-response.yaml#/ApiSpecResponse'

    ########################################
    # 3. API 수정
    ########################################
    put:
      tags:
        - ApiSpec
      summary: API 스펙 수정
      description: 단일 API 스펙과 필드를 전체 수정합니다.
      operationId: updateApiSpec
      parameters:
        - name: apiSpecVersionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: './components/requests/api-spec-request.yaml#/ApiSpecRequest'
      responses:
        '200':
          $ref: './components/responses/api-spec-response.yaml#/ApiSpecUpdateResponse'


    ########################################
    # 4. API 생성
    ########################################
  /api/v1/specs:
    post:
      tags:
        - ApiSpec
      summary: API 스펙 생성
      description: 새로운 API 스펙과 필드를 등록합니다.
      operationId: createApiSpec
      requestBody:
        $ref: './components/requests/api-spec-request.yaml#/ApiSpecRequest'
      responses:
        '201':
          $ref: './components/responses/api-spec-response.yaml#/ApiSpecCreatedResponse'

  ########################################
  # 5. Project 조회
  ########################################
  /api/v1/projects:
    get:
      tags:
        - Project
      operationId: getAllProjects
      summary: "프로젝트 전체 목록 조회"
      responses:
        "200":
          $ref: "./components/responses/scrud-project-response.yaml#/ScrudProjectListResponse"
        "404":
          $ref: "./components/responses/exception-response.yaml#/NotFoundException"
      x-spring-paginated: true
    
    ########################################
    # 6. Project 생성
    ########################################
    post:
      tags:
        - Project
      operationId: createProject
      summary: "프로젝트 생성"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./components/schemas/scrud-project-dto.yaml#/CreateProjectRequestDTO"
      responses:
        "201":
          description: "API 반환"
          content:
            text/yaml:
              schema:
                type: string
                
  ########################################
  # 7. 전역 파일 개별 추가
  ########################################
  /api/v1/projects/{projectId}:
    put:
      tags:
        - Project
      operationId: addGlobalFile
      description: "전역 파일 추가"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./components/schemas/scrud-project-dto.yaml#/GlobalFileDTO"
      parameters:
        - name: projectId
          in: path
          description: "프로젝트 ID"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          $ref: "./components/responses/success-response.yaml#/SuccessNoContent"

    ########################################
    # 8. 프로젝트 삭제
    ########################################
    delete:
      tags:
        - Project
      operationId: deleteProject
      description: "프로젝트 삭제"
      parameters:
        - name: projectId
          in: path
          description: "프로젝트 ID"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          $ref: "./components/responses/success-response.yaml#/SuccessNoContent"

  ########################################
  # 9. 전역 파일 삭제
  ########################################
  /api/v1/projects/{projectId}/{globalFileId}:
    delete:
      tags:
        - Project
      operationId: deleteGlobalFile
      description: "전역 파일 삭제"
      parameters:
        - name: projectId
          in: path
          description: "프로젝트 ID"
          required: true
          schema:
            type: integer
            format: int64
        - name: globalFileId
          in: path
          description: "전역 파일 ID"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          $ref: "./components/responses/success-response.yaml#/SuccessNoContent"
